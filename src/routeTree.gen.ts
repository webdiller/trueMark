/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignUpImport } from './routes/sign-up'
import { Route as SignInImport } from './routes/sign-in'
import { Route as AboutImport } from './routes/about'
import { Route as AppImport } from './routes/_app'
import { Route as AppProfileRouteImport } from './routes/_app/profile/route'
import { Route as AppTodosIndexImport } from './routes/_app/todos/index'
import { Route as AppSurveysIndexImport } from './routes/_app/surveys/index'
import { Route as AppTodosCreateImport } from './routes/_app/todos/create'
import { Route as AppTodosTodoIdIndexImport } from './routes/_app/todos/$todoId/index'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const SignUpRoute = SignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const SignInRoute = SignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AppProfileRouteRoute = AppProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => AppRoute,
} as any)

const AppTodosIndexRoute = AppTodosIndexImport.update({
  id: '/todos/',
  path: '/todos/',
  getParentRoute: () => AppRoute,
} as any)

const AppSurveysIndexRoute = AppSurveysIndexImport.update({
  id: '/surveys/',
  path: '/surveys/',
  getParentRoute: () => AppRoute,
} as any)

const AppTodosCreateRoute = AppTodosCreateImport.update({
  id: '/todos/create',
  path: '/todos/create',
  getParentRoute: () => AppRoute,
} as any)

const AppTodosTodoIdIndexRoute = AppTodosTodoIdIndexImport.update({
  id: '/todos/$todoId/',
  path: '/todos/$todoId/',
  getParentRoute: () => AppRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpImport
      parentRoute: typeof rootRoute
    }
    '/_app/profile': {
      id: '/_app/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AppProfileRouteImport
      parentRoute: typeof AppImport
    }
    '/_app/todos/create': {
      id: '/_app/todos/create'
      path: '/todos/create'
      fullPath: '/todos/create'
      preLoaderRoute: typeof AppTodosCreateImport
      parentRoute: typeof AppImport
    }
    '/_app/surveys/': {
      id: '/_app/surveys/'
      path: '/surveys'
      fullPath: '/surveys'
      preLoaderRoute: typeof AppSurveysIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/todos/': {
      id: '/_app/todos/'
      path: '/todos'
      fullPath: '/todos'
      preLoaderRoute: typeof AppTodosIndexImport
      parentRoute: typeof AppImport
    }
    '/_app/todos/$todoId/': {
      id: '/_app/todos/$todoId/'
      path: '/todos/$todoId'
      fullPath: '/todos/$todoId'
      preLoaderRoute: typeof AppTodosTodoIdIndexImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppProfileRouteRoute: typeof AppProfileRouteRoute
  AppTodosCreateRoute: typeof AppTodosCreateRoute
  AppSurveysIndexRoute: typeof AppSurveysIndexRoute
  AppTodosIndexRoute: typeof AppTodosIndexRoute
  AppTodosTodoIdIndexRoute: typeof AppTodosTodoIdIndexRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppProfileRouteRoute: AppProfileRouteRoute,
  AppTodosCreateRoute: AppTodosCreateRoute,
  AppSurveysIndexRoute: AppSurveysIndexRoute,
  AppTodosIndexRoute: AppTodosIndexRoute,
  AppTodosTodoIdIndexRoute: AppTodosTodoIdIndexRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '': typeof AppRouteWithChildren
  '/about': typeof AboutRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/profile': typeof AppProfileRouteRoute
  '/todos/create': typeof AppTodosCreateRoute
  '/surveys': typeof AppSurveysIndexRoute
  '/todos': typeof AppTodosIndexRoute
  '/todos/$todoId': typeof AppTodosTodoIdIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '': typeof AppRouteWithChildren
  '/about': typeof AboutRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/profile': typeof AppProfileRouteRoute
  '/todos/create': typeof AppTodosCreateRoute
  '/surveys': typeof AppSurveysIndexRoute
  '/todos': typeof AppTodosIndexRoute
  '/todos/$todoId': typeof AppTodosTodoIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/_app': typeof AppRouteWithChildren
  '/about': typeof AboutRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/_app/profile': typeof AppProfileRouteRoute
  '/_app/todos/create': typeof AppTodosCreateRoute
  '/_app/surveys/': typeof AppSurveysIndexRoute
  '/_app/todos/': typeof AppTodosIndexRoute
  '/_app/todos/$todoId/': typeof AppTodosTodoIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/about'
    | '/sign-in'
    | '/sign-up'
    | '/profile'
    | '/todos/create'
    | '/surveys'
    | '/todos'
    | '/todos/$todoId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/about'
    | '/sign-in'
    | '/sign-up'
    | '/profile'
    | '/todos/create'
    | '/surveys'
    | '/todos'
    | '/todos/$todoId'
  id:
    | '__root__'
    | '/'
    | '/_app'
    | '/about'
    | '/sign-in'
    | '/sign-up'
    | '/_app/profile'
    | '/_app/todos/create'
    | '/_app/surveys/'
    | '/_app/todos/'
    | '/_app/todos/$todoId/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AppRoute: typeof AppRouteWithChildren
  AboutRoute: typeof AboutRoute
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AppRoute: AppRouteWithChildren,
  AboutRoute: AboutRoute,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_app",
        "/about",
        "/sign-in",
        "/sign-up"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/profile",
        "/_app/todos/create",
        "/_app/surveys/",
        "/_app/todos/",
        "/_app/todos/$todoId/"
      ]
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/sign-in": {
      "filePath": "sign-in.tsx"
    },
    "/sign-up": {
      "filePath": "sign-up.tsx"
    },
    "/_app/profile": {
      "filePath": "_app/profile/route.tsx",
      "parent": "/_app"
    },
    "/_app/todos/create": {
      "filePath": "_app/todos/create.tsx",
      "parent": "/_app"
    },
    "/_app/surveys/": {
      "filePath": "_app/surveys/index.tsx",
      "parent": "/_app"
    },
    "/_app/todos/": {
      "filePath": "_app/todos/index.tsx",
      "parent": "/_app"
    },
    "/_app/todos/$todoId/": {
      "filePath": "_app/todos/$todoId/index.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
